# === 高通ipq60xx|ipq807x芯片会安装NSS ===
# === Pro禁用Docker/USB/Coremark，安装Pro包 ===
# === Max禁用Docker/mwan3，安装Max包 === 
# === Ultra在Max包的基础上安装Ultra包 === 


# TARGET config
CONFIG_TARGET_qualcommax=y                  # 指定目标平台为 qualcommax (高通IPQ系列)
CONFIG_TARGET_qualcommax_ipq60xx=y          # 指定具体的目标芯片为 ipq60xx (例如 QCA9984)
CONFIG_TARGET_MULTI_PROFILE=y               # 启用多设备配置文件支持
CONFIG_TARGET_PER_DEVICE_ROOTFS=y           # 为每个设备单独构建根文件系统
CONFIG_TARGET_DEVICE_qualcommax_ipq60xx_DEVICE_jdcloud_re-ss-01=y    # 为 jdcloud_re-ss-01 设备启用
CONFIG_TARGET_DEVICE_PACKAGES_qualcommax_ipq60xx_DEVICE_jdcloud_re-ss-01="ipq-wifi-jdcloud_re-ss-01 -kmod-ath11k-pci "   # 为该设备指定默认软件包 (包含禁用的包)
CONFIG_TARGET_DEVICE_qualcommax_ipq60xx_DEVICE_jdcloud_re-cs-02=y    # 为 jdcloud_re-cs-02 设备启用
CONFIG_TARGET_DEVICE_PACKAGES_qualcommax_ipq60xx_DEVICE_jdcloud_re-cs-02="ipq-wifi-jdcloud_re-cs-02 kmod-ath11k-pci ath11k-firmware-qcn9074 luci-app-athena-led luci-i18n-athena-led-zh-cn"   # 为该设备指定默认软件包
CONFIG_TARGET_ROOTFS_INITRAMFS=n            # 不使用 initramfs 根文件系统 (使用 squashfs)

# Compile
CONFIG_USE_APK=n                            # 不使用 APK 包管理器 (使用 OPKG)
CONFIG_DEVEL=y                              # 开发模式 (启用调试信息等)
CONFIG_CCACHE=y                             # 启用 ccache 加速编译

# BUSYBOX
CONFIG_BUSYBOX_CUSTOM=y                     # 使用自定义 BusyBox 配置
CONFIG_BUSYBOX_CONFIG_TELNET=y              # 启用 BusyBox Telnet 功能

# Swap
CONFIG_PACKAGE_zram-swap=y                  # 启用 zram 交换分区 (内存够不会启用zram)

# Athena-Led
CONFIG_PACKAGE_luci-app-athena-led=m        # 启用 Athena LED 控制 Luci 应用 (模块形式)
CONFIG_PACKAGE_luci-i18n-athena-led-zh-cn=m  # 启用 Athena LED 应用的中文翻译 (模块形式)

# Proto
CONFIG_PACKAGE_proto-bonding=y              # 启用链路聚合协议 (bonding)
# CONFIG_PACKAGE_luci-proto-quectel=y       # (注释掉) 启用 Quectel 通信模块协议 (未启用)
# CONFIG_PACKAGE_luci-proto-wireguard=y       # 启用 WireGuard 协议支持 (未启用)
CONFIG_PACKAGE_luci-proto-relay=y           # 启用中继协议支持

# Kernel modules
CONFIG_PACKAGE_kmod-fs-exfat=y              # 启用 exFAT 文件系统支持
CONFIG_PACKAGE_kmod-fs-vfat=y               # 启用 VFAT 文件系统支持
CONFIG_PACKAGE_kmod-netlink-diag=y          # 启用 Netlink 诊断模块
CONFIG_PACKAGE_kmod-inet-diag=y             # 启用 inet 诊断模块
CONFIG_PACKAGE_kmod-tls=y                   # 启用 TLS 支持
CONFIG_PACKAGE_kmod-tun=y                   # 启用 TUN/TAP 网络接口支持

#  USB Support
CONFIG_PACKAGE_kmod-usb-acm=y               # 启用 USB ACM (串口) 支持
CONFIG_PACKAGE_kmod-usb-ehci=y              # 启用 USB EHCI 控制器支持
# CONFIG_PACKAGE_kmod-usb-net-huawei-cdc-ncm=y # 启用华为 CDC NCM USB 网络支持
# CONFIG_PACKAGE_kmod-usb-net-ipheth=y        # 启用 Apple iPhone USB 网络支持
# CONFIG_PACKAGE_kmod-usb-net-rndis=y         # 启用 RNDIS USB 网络支持
# CONFIG_PACKAGE_kmod-usb-net-asix-ax88179=y   # 启用 ASIX AX88179 USB 网络支持
# CONFIG_PACKAGE_kmod-usb-net-rtl8152=y        # 启用 Realtek RTL8152 USB 网络支持
# CONFIG_PACKAGE_kmod-usb-net-sierrawireless=y # 启用 Sierra Wireless USB 网络支持
CONFIG_PACKAGE_kmod-usb-ohci=y              # 启用 USB OHCI 控制器支持
CONFIG_PACKAGE_kmod-usb-serial-qualcomm=y   # 启用 Qualcomm USB 串口支持
CONFIG_PACKAGE_kmod-usb-storage=y           # 启用 USB 存储设备支持
CONFIG_PACKAGE_kmod-usb-storage-extras=y    # 启用 USB 存储额外功能
CONFIG_PACKAGE_kmod-usb-storage-uas=y       # 启用 USB Attached SCSI (UAS) 支持
CONFIG_PACKAGE_kmod-usb2=y                  # 启用 USB 2.0 支持
CONFIG_PACKAGE_kmod-usb3=y                  # 启用 USB 3.0 支持

# === Max禁用Docker/mwan3 === 

#  docker
CONFIG_PACKAGE_runc=n
CONFIG_PACKAGE_docker=n
CONFIG_PACKAGE_dockerd=n
#  docker kernel dependencies
CONFIG_PACKAGE_kmod-br-netfilter=n          # 启用桥接网络过滤器支持
CONFIG_PACKAGE_kmod-ip6tables=n             # 启用 IPv6 iptables 支持
CONFIG_PACKAGE_kmod-ipt-conntrack=n         # 启用连接跟踪支持
CONFIG_PACKAGE_kmod-ipt-extra=n             # 启用额外的 iptables 模块
CONFIG_PACKAGE_kmod-ipt-nat=n               # 启用 NAT 支持
CONFIG_PACKAGE_kmod-ipt-nat6=n              # 启用 IPv6 NAT 支持
CONFIG_PACKAGE_kmod-ipt-physdev=n           # 启用物理设备匹配支持
CONFIG_PACKAGE_kmod-nf-ipt6=n               # 启用 IPv6 Netfilter 支持
CONFIG_PACKAGE_kmod-nf-ipvs=n               # 启用 IPVS (负载均衡) 支持
CONFIG_PACKAGE_kmod-nf-nat6=n               # 启用 IPv6 Netfilter NAT 支持
CONFIG_PACKAGE_kmod-dummy=n                 # 启用 dummy 网络接口支持
CONFIG_PACKAGE_kmod-veth=n                  # 启用 veth 网络接口支持
#  docker dependencies
CONFIG_PACKAGE_iptables-mod-extra=n         # 启用额外的 iptables 模块
CONFIG_PACKAGE_ip6tables-mod-fullconenat=n  # 启用 IPv6 Full Cone NAT 模块
CONFIG_PACKAGE_iptables-mod-fullconenat=n   # 启用 IPv4 Full Cone NAT 模块
CONFIG_PACKAGE_libip4tc=n                   # 启用 IPv4 iptables 库
CONFIG_PACKAGE_libip6tc=n                   # 启用 IPv6 iptables 库

#  mwan3 dependencies
CONFIG_PACKAGE_iptables-mod-conntrack-extra=n # 启用额外的连接跟踪 iptables 模块
CONFIG_PACKAGE_kmod-macvlan=n               # 启用 macvlan 网络接口支持 (Libwrt新增)

#  Coremark
CONFIG_PACKAGE_coremark=n                   # 启用 Coremark 基准测试
CONFIG_COREMARK_OPTIMIZE_O3=n               # Coremark 使用 O3 优化级别
CONFIG_COREMARK_ENABLE_MULTITHREADING=n     # Coremark 启用多线程
# CONFIG_COREMARK_NUMBER_OF_THREADS=6         # Coremark 使用 6 个线程

# NSS
CONFIG_IPQ_MEM_PROFILE_256=y                # 设置IPQ平台内存配置为256MB
CONFIG_ATH11K_MEM_PROFILE_512M=y            # 设置ATH11K Wi-Fi驱动内存配置为512MB
CONFIG_NSS_MEM_PROFILE_HIGH=y               # 设置网络子系统(NSS)内存配置为高配置
CONFIG_NSS_FIRMWARE_VERSION_11_4=y          # 设置网络子系统(NSS)固件版本为11.4
CONFIG_PACKAGE_sqm-scripts-nss=y            # 启用针对NSS优化的智能队列管理(SQM)脚本包
CONFIG_PACKAGE_kmod-qca-mcs=y               # 启用QCA MCS(调制编码方案)内核模块
CONFIG_KERNEL_SKB_RECYCLER=y                # 启用内核SKB(套接字缓冲区)回收器
CONFIG_KERNEL_SKB_RECYCLER_MULTI_CPU=y      # 启用多CPU环境下的SKB(套接字缓冲区)回收器
CONFIG_PACKAGE_kmod-ath11k-pci=m            # 将ATH11K PCI接口Wi-Fi驱动编译为内核模块
CONFIG_NSS_DRV_WIFI_MESH_ENABLE=y           # 启用网络子系统(NSS)驱动中的Wi-Fi网状网络功能
CONFIG_PACKAGE_MAC80211_MESH=y              # 启用MAC80211协议栈中的网状网络支持
CONFIG_ATH11K_NSS_MESH_SUPPORT=y            # 启用ATH11K Wi-Fi驱动对NSS网状网络的支持

# Libraries
CONFIG_PACKAGE_luci-lib-ipkg=y              # 启用 Luci 的 ipkg 库支持
CONFIG_PACKAGE_libopenssl-legacy=y          # 启用 OpenSSL 旧版库支持

#  iptables nft
CONFIG_PACKAGE_iptables-nft=y               # 启用 iptables-nft (Netfilter) 支持
CONFIG_PACKAGE_ip6tables-nft=y              # 启用 ip6tables-nft (IPv6 Netfilter) 支持


# Package
# CONFIG_PACKAGE_adduser=y                    # 启用 adduser 用户管理工具
CONFIG_PACKAGE_shadow-useradd=y                    # 启用 useradd 用户管理工具
# CONFIG_PACKAGE_easytier=y                   # 启用 EasyTier 软件包
CONFIG_PACKAGE_htop=y                       # 启用 htop 系统监控工具
CONFIG_PACKAGE_fuse-utils=y                 # 启用 FUSE 工具支持
CONFIG_PACKAGE_ntfs3-mount=y                # 启用 NTFS-3G 挂载支持
CONFIG_PACKAGE_openssh-sftp-server=y        # 启用 OpenSSH SFTP 服务器
CONFIG_PACKAGE_tcpdump=y                    # 启用 tcpdump 网络抓包工具
CONFIG_PACKAGE_sgdisk=y                     # 启用 sgdisk 磁盘分区工具
CONFIG_PACKAGE_openssl-util=y               # 启用 OpenSSL 工具
CONFIG_PACKAGE_resize2fs=y                  # 启用 resize2fs 文件系统调整工具
CONFIG_PACKAGE_qrencode=y                   # 启用 QR Code 生成工具
# CONFIG_PACKAGE_smartmontools-drivedb=y      # 启用 smartmontools 驱动数据库
CONFIG_PACKAGE_usbutils=y                   # 启用 USB 工具集
CONFIG_PACKAGE_usbmuxd=y                    # 启用 USB multiplexing daemon
CONFIG_PACKAGE_mii-tool=y                   # 启用 MII 工具 (网络接口管理)
CONFIG_PACKAGE_default-settings=y           # 启用默认设置包
CONFIG_PACKAGE_default-settings-chn=y       # 启用中文默认设置包


# === ipq60xx的基础Luci包Pro ===
CONFIG_PACKAGE_luci-app-netspeedtest=y
CONFIG_PACKAGE_luci-app-openclash=y
CONFIG_PACKAGE_luci-app-partexp=y
CONFIG_PACKAGE_luci-app-samba4=y
CONFIG_PACKAGE_tailscale=y
CONFIG_PACKAGE_luci-app-tailscale=y
# CONFIG_PACKAGE_luci-i18n-tailscale-zh_cn=y
CONFIG_PACKAGE_luci-app-taskplan=y
CONFIG_PACKAGE_luci-app-ttyd=y
CONFIG_PACKAGE_luci-app-upnp=y
CONFIG_PACKAGE_luci-app-wolplus=y

# === Max安装Max包 === 
CONFIG_PACKAGE_easytier=y                   # 启用 EasyTier 软件包
CONFIG_PACKAGE_luci-app-easytier=y
# CONFIG_PACKAGE_luci-i18n-easytier-zh_cn=y
CONFIG_PACKAGE_luci-app-lucky=y
# CONFIG_PACKAGE_luci-i18n-lucky-zh_cn=y
